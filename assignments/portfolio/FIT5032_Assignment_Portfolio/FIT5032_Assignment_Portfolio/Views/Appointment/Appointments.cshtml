@model FIT5032_Assignment_Portfolio.Models.WrapperAppointmentViewModel
@using FIT5032_Assignment_Portfolio.Models

@using System.Web.UI.WebControls

@{
    ViewBag.Title = "Appointment";
    Model.dropDownListItems = new List<SelectListItem>();
    //completeOptions.Add(new SelectListItem() { Text = "0", Value = "0" });
    //completeOptions.Add(new SelectListItem() { Text = "1", Value = "1" });
    SelectListItem falseOption = new SelectListItem();
    falseOption.Text = "false"; falseOption.Value = "false";
    falseOption.Selected = false;
    SelectListItem trueOption = new SelectListItem();
    trueOption.Text = "true"; trueOption.Value = "true";
    trueOption.Selected = true;


    Model.dropDownListItems.Add(falseOption);
    Model.dropDownListItems.Add(trueOption);

    UpdateAppointmentViewModel updateModel = Model.UpdateViewModel;
}

<div class="appointment-table-view">
    <div class="appointment-table-view-header">
        <h2>Appointment</h2>
        @Html.ActionLink("Create", "Create", "Appointment")
    </div>
    <hr />
    <div id="dataTable_wrapper" class="dataTables_wrapper">
        <table id="dataTable" class="table table-striped table-bordered dataTable" cellspacing="0" width="100%" role="grid" aria-describedby="dataTable_info" style="width: 100%;">
            <thead>
                <tr role="row">
                    <th class="sorting" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="Name: activate to sort column ascending" style="width: 52px;">Appointment ID</th>
                    <th class="sorting" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="Time Start: activate to sort column ascending" style="width: 53px;">Time Start</th>
                    <th class="sorting" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="Time End: activate to sort column ascending" style="width: 53px;">Time End</th>
                    <th class="sorting" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="Location: activate to sort column ascending" style="width: 47px;" aria-sort="descending">Location</th>
                    <th class="sorting" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="Staff: activate to sort column ascending" style="width: 26px;">Staff</th>
                    <th class="sorting" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="Description: activate to sort column ascending" style="width: 61px;">Description</th>
                    <th class="sorting" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="Rating: activate to sort column ascending" style="width: 61px;">Rating</th>
                    <th class="sorting" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="State: activate to sort column ascending" style="width: 61px;">State</th>
                </tr>
            </thead>

            <tbody id="appointmentContainer">

                @for (int i = 0; i < Model.ListViewModel.appointments.Count; i++)
                {
                    @*if (i % 2 == 0)*@
                    if(true)
                    {
                        <tr role="row" class="odd">
                            <td>
                                @Html.DisplayFor(modelItem => modelItem.ListViewModel.appointments[i].Id)
                                @Html.HiddenFor(modelItem => Model.UpdateViewModel.Id, new { htmlAttributes = new { @class = "form-control", @value = Model.ListViewModel.appointments[i].Id } })
                            </td>
                            <td>@Html.DisplayFor(modelItem => modelItem.ListViewModel.appointments[i].AppointedDateTimeStart)</td>
                            <td>@Html.DisplayFor(modelItem => modelItem.ListViewModel.appointments[i].AppointedDateTimeEnd)</td>
                            <td>@Html.DisplayFor(modelItem => modelItem.ListViewModel.appointments[i].AppointedLocationName)</td>
                            <td>@Html.DisplayFor(modelItem => modelItem.ListViewModel.appointments[i].StaffName)</td>
                                @Html.AntiForgeryToken()
                                <td>
                                @using (Html.BeginForm("UpdateAsStaff", "Appointment", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "updateAppointmentForm1" }))
                                {
                                    <div class="form-group">
                                        @Html.HiddenFor(modelItem => modelItem.UpdateViewModel.Id, new { Value = Model.ListViewModel.appointments[i].Id  })
                                        @Html.EditorFor(modelItem => modelItem.UpdateViewModel.Description, new {  htmlAttributes = new { @class = "form-control", @onchange = "handleSelectListChange(1)", Value = Model.ListViewModel.appointments[i].Description } })
                                    </div>
                                }
                                </td>
                                <td>
                                    @using (Html.BeginForm("UpdateAsStaff", "Appointment", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "updateAppointmentForm2" }))
                                    {
                                        <div class="form-group">
                                            @Html.HiddenFor(modelItem => modelItem.UpdateViewModel.Id, new { Value = Model.ListViewModel.appointments[i].Id })
                                            @Html.EditorFor(modelItem => modelItem.UpdateViewModel.Rating, new { htmlAttributes = new { @class = "form-control", Value = Model.ListViewModel.appointments[i].Rating, @onchange = "handleSelectListChange(2)" } })
                                        </div>
                                    }
                                    </td>
                                <td>
                                    @using (Html.BeginForm("UpdateAsStaff", "Appointment", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "updateAppointmentForm3" }))
                                    {
                                        <div class="form-group">
                                            @Html.HiddenFor(modelItem => modelItem.UpdateViewModel.Id, new { Value = Model.ListViewModel.appointments[i].Id })
                                            @Html.DropDownListFor(modelItem => modelItem.UpdateViewModel.Complete, new List<SelectListItem> { new SelectListItem { Text = "InComplete", Value = "false", Selected = false }, new SelectListItem { Text = "Complete", Value = "true", Selected = true } }, new { @id  = "dropDownCompleted",@class = "form-control form-select-lg mb-3", @aria_label = "form-select-lg example", @onchange = "handleSelectListChange(3)" })
                                        </div>
                                    }
                                    </td>
                        </tr>
                                    }
                }
            </tbody>
            <tfoot>
                <tr>
                    <th rowspan="1" colspan="1">Appointment ID</th>
                    <th rowspan="1" colspan="1">Time Start</th>
                    <th rowspan="1" colspan="1">Time End</th>
                    <th rowspan="1" colspan="1">Location</th>
                    <th rowspan="1" colspan="1">Staff</th>
                    <th rowspan="1" colspan="1">Description</th>
                    <th rowspan="1" colspan="1">Rating</th>
                    <th rowspan="1" colspan="1">State</th>
                </tr>
            </tfoot>
        </table>
    </div>
</div>
<script>
    const appointmentContainer = document.getElementById("appointmentContainer");
    const updateAppointmentForm1 = document.getElementById("updateAppointmentForm1");
    const updateAppointmentForm2 = document.getElementById("updateAppointmentForm2");
    const updateAppointmentForm3 = document.getElementById("updateAppointmentForm3");

    console.log("HERE");
    function handleSelectListChange(formValue) {
        switch (formValue) {
            case 1:
                updateAppointmentForm1.submit();
                break;
            case 2:
                updateAppointmentForm2.submit();
                break;
            case 3:
                updateAppointmentForm3.submit();
                break;
        }

        function selectOption(valueToSelect) {
            let element = document.getElementById("dropDownCompleted");
            element.value = valueToSelect;
        }

        selectElement('leaveCode', '11');
        //function doPost() {
        //    $.post("/Appointment/Update",
        //        {
        //            model: {
        //                Name: "Joe",
        //                Age: 29
        //            },
        //            num1: 5,
        //            num2: 10
        //        },
        //        function (data, status) {
        //            //Handle status if you decide to return something
        //        });
        //}
    }
</script>