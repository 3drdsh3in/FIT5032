@model FIT5032_Assignment_Portfolio.Models.WrapperAppointmentViewModel
@using FIT5032_Assignment_Portfolio.Models

@using System.Web.UI.WebControls

@{
    ViewBag.Title = "Appointments";
    Model.dropDownListItems = new List<SelectListItem>();
    //completeOptions.Add(new SelectListItem() { Text = "0", Value = "0" });
    //completeOptions.Add(new SelectListItem() { Text = "1", Value = "1" });
    SelectListItem falseOption = new SelectListItem();
    falseOption.Text = "false"; falseOption.Value = "false";
    falseOption.Selected = false;
    SelectListItem trueOption = new SelectListItem();
    trueOption.Text = "true"; trueOption.Value = "true";
    trueOption.Selected = true;

    Model.dropDownListItems.Add(falseOption);
    Model.dropDownListItems.Add(trueOption);

    //if (TempData["LoggedIn"] == null || TempData["ClientType"] == null) { return; }
}

<div class="appointment-table-view">
    <div class="appointment-table-view-header">
        <h2>@ViewBag.Title</h2>

        <a href="@Url.Action("Create","Appointment")"><i class="fa-solid fa-plus"></i> Create Appointment</a>
        @*@if (TempData["LoggedIn"] != null && TempData["ClientType"] != null)
        {
            if (TempData["LoggedIn"].Equals("true") && TempData["ClientType"].Equals("Staff"))
            {
            }
        }*@
    </div>
    <hr />

</div>
<div id='calendar'></div>
<!-- Modal -->
<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 id="modalTitle" class="modal-title">Modal Header</h4>
            </div>
            <div class="modal-body">
                <div id="modalContent">Some text in the modal.</div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal" id="deleteAppointmentBtn">Delete <i class="fa-solid fa-trash"></i></button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "__AjaxAntiForgeryForm" }))
{
    @Html.AntiForgeryToken()
}
<script>
    const calendarEl = document.getElementById('calendar');

    const modalTitle = document.getElementById('modalTitle');
    const modalContent = document.getElementById('modalContent');
    const modalDeleteBtn = document.getElementById('deleteAppointmentBtn');

    function clearModal() {
        modalTitle.innerHTML = "";
        modalContent.innerHTML = "";
    }

    function setModalFields(extraInfo) {
        modalTitle.innerHTML = "Appointment Made By: " + extraInfo["staffName"];
        modalContent.innerHTML += "<p>Location: " + extraInfo["locationName"] + "</p>";
        modalContent.innerHTML += "<p>Description: " + extraInfo["description"] + "</p>";
        modalContent.innerHTML += "<p>Client:" + extraInfo["clientName"] + "</p>";
    }

    const calendar = new FullCalendar.Calendar(calendarEl, {
        initialView: 'dayGridMonth',
        headerToolbar: { center: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek' },
        eventClick: function (info) {
            var eventObj = info.event;
            var extraInfo = eventObj.extendedProps["extraInfo"];

            clearModal();
            setModalFields(extraInfo);

            modalDeleteBtn.addEventListener("click", () => {
                console.log(document.getElementsByName("__RequestVerificationToken")[0].value);
                fetch(`/Appointment/Delete/${extraInfo["Id"]}`,
                    {
                        headers: {
                            'Accept': 'application/json',
                            'Content-Type': 'application/json',
                            "X-ANTI-FORGERY-TOKEN": document.getElementsByName("__RequestVerificationToken")[0].value,
                        },
                        method: "POST",
                        body: JSON.stringify({})
                    })
                    .then(res => console.log(res));
                    //.then(res => res.json())
                    //.then(res => {
                    //    console.log(res);
                    //})
            })

            $(document).ready(function () {
                $("#myModal").modal("toggle");
            });

            info.jsEvent.preventDefault();
        }
        }
    );
    calendar.render();

    var appointments = []

    @foreach (var a in Model.ListViewModel.appointments)
    {
        @:appointments.push({ "title": "@a.Description", "start": "@a.AppointedDateTimeStart.ToString("yyyy-MM-ddTHH:mm:ssZ")", "end": "@a.AppointedDateTimeEnd.ToString("yyyy-MM-ddTHH:mm:ssZ")", "extraInfo": { "staffName": "@a.StaffName", "clientName": "@a.ClientName", "locationName": "@a.AppointedLocationName", "description": "@a.Description", "Id": "@a.Id" } });
    }


    appointments.map((a) => {
        console.log(a);
        calendar.addEvent(a);
    })


    console.log(appointments);

     const appointmentContainer = document.getElementById("appointmentContainer");
     const updateAppointmentForm1 = document.getElementById("updateAppointmentForm1");
     const updateAppointmentForm2 = document.getElementById("updateAppointmentForm2");
     const updateAppointmentForm3 = document.getElementById("updateAppointmentForm3");

     console.log("HERE");
     function handleSelectListChange(formValue) {
         switch (formValue) {
             case 1:
                 updateAppointmentForm1.submit();
                 break;
             case 2:
                 updateAppointmentForm2.submit();
                 break;
             case 3:
                 updateAppointmentForm3.submit();
                 break;
         }

        function selectOption(valueToSelect) {
            let element = document.getElementById("dropDownCompleted");
            element.value = valueToSelect;
        }

        selectElement('leaveCode', '11');
    }
</script>